Next

	https://www.npmjs.com/package/@graphql-schema/validate-schema
	

	Schema
		// TO INVESTIGATE
		Do we need this?

		directives
			// DefaultValue definition matches the type
			// Usage value matched the definintion type

		Walk roots to ensure we know all types referenced by anything, use that to decide on print outputting

		Allow extend syntax nodes
			enum
			union
			object
			interface
			input object
			schema

		All kitchen sink to schema validation Files unit test now that extend is added
		Add basic schema with extends and the check the validated printed output has no extends
		Allow multiple exceptions but some are catastrophic

	Request
		allow variables in operation
		allow variables as input values instead of a constant
		why is 'field4?' allowed in the reference implementation?


	Request processing
		return node that has data and exceptions
		validate incoming request against schema
			validate document
			validate variables

		@skip
		@include


Specifications
	GraphQL				https://spec.graphql.org/
	Relay				https://relay.dev/docs/guides/graphql-server-specification/
	GraphQL over HTTP	https://graphql.github.io/graphql-over-http/
	OData				https://www.odata.org/documentation/
	OpenAPI				https://swagger.io/specification/
	Apollo Federation	https://www.apollographql.com/docs/federation/v1/federation-spec/


Organisations
	Chillicream (.Net)	https://chillicream.com/
	Apollo (Node.js)	https://www.apollographql.com/
	The Guild (Node.js)	https://the-guild.dev/

Features

	Parsing
	Validation
	Execution
	Introspection

	Fields
	Arguments
	Aliases
	Fragments
	Operation Name
	Variables
	Directives
	Inline Fragments

	Scalar Types
	Enumeration Types
	Lists and Non-Null
	Interfaces
	Union Types
	Input Types

	Relay
		Pagination
		Global Object Identification
	